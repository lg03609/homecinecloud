!function(){"use strict";self.Emby={};var usesClasses,appMode,supportsModules="noModule"in document.createElement("script"),usesModules=!1;function appendScript(script,src,enableMultiVersion){var doc=document;script.src=src,enableMultiVersion&&(src=src.replace(".js",self.Emby.jsExtension)),doc.head.appendChild(script)}function loadPromise(){if(self.Promise&&self.Promise.all)return function(){if(self.caches&&navigator.serviceWorker&&"ios"!==self.appMode&&"android"!==self.appMode&&"windows"!==self.appMode&&"winjs"!==self.appMode&&!self.tizen)return caches.open("embyappinfo").then(function(cache){return cache.put("appversion",new Response(self.dashboardVersion||"")).then(function(){try{var serviceWorkerOptions={};return usesModules&&supportsModules&&(serviceWorkerOptions.type="module"),navigator.serviceWorker.register("serviceworker.js",serviceWorkerOptions).then(function(){return navigator.serviceWorker.ready.then(function(){"standalone"===self.appMode&&(self.urlCacheParam=null),Emby.serviceWorkerEnabled=!0})},catchAndResolve).then(function(reg){return reg&&reg.sync?reg.sync.register("emby-sync"):Promise.resolve()})}catch(err){console.log("Error registering serviceWorker: "+err)}},catchAndResolve)},catchAndResolve);return Promise.resolve()}().then(loadRequire);var script=document.createElement("script"),src="./modules/polyfills/native-promise-only.js";self.urlCacheParam&&(src+="?"+self.urlCacheParam),script.onload=loadRequire,appendScript(script,src)}function catchAndResolve(err){return console.log("error registering service worker: "+err),Promise.resolve()}function loadRequire(){var script=document.createElement("script"),src="./modules/alameda/alameda.js";self.urlCacheParam&&(src+="?"+self.urlCacheParam),script.onload=loadApp,appendScript(script,src)}function loadApp(){var script=document.createElement("script"),src="./app.js";self.urlCacheParam&&(src+="?"+self.urlCacheParam),usesModules&&supportsModules&&(script.type="module"),appendScript(script,src,!0)}usesClasses=!(self.Emby.jsExtension=".js"),self.Emby.requiresClassesPolyfill=!usesClasses,usesClasses=document.documentElement,(appMode=usesClasses.getAttribute("data-appmode"))&&(self.appMode=appMode),(usesClasses=usesClasses.getAttribute("data-appversion"))&&(self.dashboardVersion=usesClasses),usesClasses?self.urlCacheParam="v="+usesClasses:appMode||(self.urlCacheParam="v="+(new Date).getTime()),loadPromise()}();